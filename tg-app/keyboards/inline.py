# keyboards/inline.py

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData
from typing import Optional, List

class Navigation(CallbackData, prefix='nav'):
    data: str
    previous: str
    callback_func: str = "None"
        
class BaseCallbackData(CallbackData, prefix='base'):
    data: str
        
class Pagination(CallbackData, prefix='page'):
    data: str
    page: int
    
class Sort(CallbackData, prefix='sort'):
    data: str
    type: str
    current_sort_order: str

class FilterCallbackData(CallbackData, prefix='filter'):
    action: str
    additional: Optional[str] = None

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤
def filters_menu_keyboard():
    message_text = "–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä', callback_data=BaseCallbackData(data='create_filter').pack()))
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='main_menu_keyboard').pack()))
    keyboard = builder.as_markup()
    return message_text, keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
def filter_editor_keyboard(current_filter: List[str]):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ', callback_data=BaseCallbackData(data='add_condition').pack()))
    builder.row(InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ', callback_data=BaseCallbackData(data='delete_last').pack()))
    builder.row(InlineKeyboardButton(text='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏', callback_data=BaseCallbackData(data='save_exit').pack()))
    builder.row(InlineKeyboardButton(text='–í—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', callback_data=BaseCallbackData(data='exit').pack()))
    keyboard = builder.as_markup()
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö
    if current_filter:
        filter_text = "\n".join(current_filter)
    else:
        filter_text = "–§–∏–ª—å—Ç—Ä –ø—É—Å—Ç."
    
    message_text = f"–†–µ–¥–∞–∫—Ç–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤:\n–í–∞—à —Ñ–∏–ª—å—Ç—Ä:\n{filter_text}"
    return message_text, keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
def timeframe_selection_keyboard():
    builder = InlineKeyboardBuilder()
    timeframes = ["1m", "5m", "15m", "30m", "1h", "4h", "1d"]
    for tf in timeframes:
        builder.add(InlineKeyboardButton(text=tf, callback_data=FilterCallbackData(action='select_timeframe', additional=tf).pack()))
    builder.row(InlineKeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä', callback_data=BaseCallbackData(data='return_to_editor').pack()))
    keyboard = builder.as_markup()
    return "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º:", keyboard

def parameter_selection_keyboard():
    builder = InlineKeyboardBuilder()
    parameters = ["–ü–∏–≤–æ—Ç", "–î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è"]
    for param in parameters:
        builder.add(InlineKeyboardButton(text=param, callback_data=FilterCallbackData(action='select_parameter', additional=param).pack()))
    builder.row(InlineKeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä', callback_data=BaseCallbackData(data='return_to_editor').pack()))
    keyboard = builder.as_markup()
    return "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞:", keyboard

def operator_selection_keyboard():
    builder = InlineKeyboardBuilder()
    operators = [">=", "<=", "–ù–∞–ª–∏—á–∏–µ"]
    for op in operators:
        builder.add(InlineKeyboardButton(text=op, callback_data=FilterCallbackData(action='select_operator', additional=op).pack()))
    builder.row(InlineKeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä', callback_data=BaseCallbackData(data='return_to_editor').pack()))
    keyboard = builder.as_markup()
    return "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:", keyboard

# # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

def main_menu_keyboard():
    message_text = "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data=BaseCallbackData(data='settings').pack()))
    builder.add(InlineKeyboardButton(text='–õ–ö', callback_data=BaseCallbackData(data='profile').pack()))
    builder.add(InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data=BaseCallbackData(data='help').pack()))
    builder.row(InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ –º–æ–Ω–µ—Ç', callback_data=BaseCallbackData(data='tokens').pack()))
    builder.row(InlineKeyboardButton(text='–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ', callback_data=BaseCallbackData(data='tracking').pack()))
    builder.row(InlineKeyboardButton(text='–§–∏–ª—å—Ç—Ä—ã', callback_data=BaseCallbackData(data='filters').pack()))
    keyboard = builder.as_markup()
    return message_text, keyboard

# –ú–µ–Ω—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è (–ª–æ–Ω–≥ –∏ —à–æ—Ä—Ç –ª–∏—Å—Ç)
def tracking_menu_keyboard():
    message_text = "–ú–µ–Ω—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text='–õ–æ–Ω–≥ –ª–∏—Å—Ç', callback_data=BaseCallbackData(data='long_list').pack()))
    builder.add(InlineKeyboardButton(text='–®–æ—Ä—Ç –ª–∏—Å—Ç', callback_data=BaseCallbackData(data='short_list').pack()))
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='main_menu_keyboard').pack()))
    keyboard = builder.as_markup()
    return message_text, keyboard

# –ú–µ–Ω—é –ª–æ–Ω–≥ –ª–∏—Å—Ç–∞
def long_list_menu_keyboard(long_list):
    if not long_list:
        message_text = "–õ–æ–Ω–≥ –ª–∏—Å—Ç –ø—É—Å—Ç."
    else:
        message_text = "–í–∞—à –õ–æ–Ω–≥ –ª–∏—Å—Ç:"
    
    builder = InlineKeyboardBuilder()
    
    for token in long_list:
        builder.row(
            InlineKeyboardButton(text=token, callback_data=BaseCallbackData(data=f'token_{token}').pack()),
            InlineKeyboardButton(text="‚ùå", callback_data=BaseCallbackData(data=f'remove_long_list_{token}').pack())
        )
    
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='tracking_menu_keyboard').pack()))
    keyboard = builder.as_markup()
    
    return message_text, keyboard

# –ú–µ–Ω—é —à–æ—Ä—Ç –ª–∏—Å—Ç–∞
def short_list_menu_keyboard(short_list):
    if not short_list:
        message_text = "–®–æ—Ä—Ç –ª–∏—Å—Ç –ø—É—Å—Ç."
    else:
        message_text = "–í–∞—à –®–æ—Ä—Ç –ª–∏—Å—Ç:"
    
    builder = InlineKeyboardBuilder()
    
    for token in short_list:
        builder.row(
            InlineKeyboardButton(text=token, callback_data=BaseCallbackData(data=f'token_{token}').pack()),
            InlineKeyboardButton(text="‚ùå", callback_data=BaseCallbackData(data=f'remove_short_list_{token}').pack())
        )
    
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='tracking_menu_keyboard').pack()))
    keyboard = builder.as_markup()
    
    return message_text, keyboard

# # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ 

def settings_menu_keyboard():
    message_text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏:"
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text='–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data=BaseCallbackData(data='notifications').pack()))
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='main_menu_keyboard').pack()))
    keyboard = builder.as_markup()
    return message_text, keyboard

def paginated_tokens_menu_keyboard(items, page=1, per_page=5):
    total_items = len(items)
    if not items:
        message_text = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–æ–Ω–µ—Ç –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        builder = InlineKeyboardBuilder()
        builder.row(InlineKeyboardButton(text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data=BaseCallbackData(data='refresh_tokens').pack()))
        builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='main_menu_keyboard').pack()))
        return message_text, builder.as_markup()

    total_pages = (total_items - 1) // per_page + 1
    message_text = f"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–Ω–µ—Ç—É (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{total_pages}):"
    builder = InlineKeyboardBuilder()
    start = (page - 1) * per_page
    end = start + per_page

    for item_key in items[start:min(end, total_items)]:
        display_text = item_key
        builder.row(InlineKeyboardButton(text=display_text, callback_data=BaseCallbackData(data=f'token_{item_key}').pack()))

    navigation_row = []
    if page > 1:
        navigation_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=Pagination(data='change_token_page', page=page-1).pack()))
    navigation_row.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data=BaseCallbackData(data='noop').pack()))
    if page < total_pages:
        navigation_row.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=Pagination(data='change_token_page', page=page+1).pack()))
    if navigation_row:
        builder.row(*navigation_row)

    builder.row(InlineKeyboardButton(text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data=BaseCallbackData(data='refresh_tokens').pack()))
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='main_menu_keyboard').pack()))

    return message_text, builder.as_markup()

def help_menu_keyboard(is_admin):
    message_text = "üîπ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n"
    message_text += "üìä –¢–∞–π–º—Ñ—Ä–µ–π–º (1d, 12h, 8h, 4h, 2h, 1h), –¢–∏–ø (long, short):\n"
    
    message_text += "‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    message_text += "‚ñ´Ô∏è `/start` ‚Äî –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
    message_text += "‚ñ´Ô∏è `/help` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é\n\n"
    
    message_text += "üìä –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:\n"
    message_text += "‚ñ´Ô∏è `/get_set <—Ç–∞–π–º—Ñ—Ä–µ–π–º> <—Ç–∏–ø>` ‚Äî –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —Å —Ä–∞—Å—Ç—è–∂–∫–æ–π\n"
    message_text += "–ü—Ä–∏–º–µ—Ä: `/get_set 1d long`\n\n"
    
    message_text += "‚ñ´Ô∏è `/get_piv <—Ç–∞–π–º—Ñ—Ä–µ–π–º> <—Ç–∏–ø>` ‚Äî –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —Å –ø–∏–≤–æ—Ç–æ–º\n"
    message_text += "–ü—Ä–∏–º–µ—Ä: `/get_piv 4h short`\n\n"
    
    message_text += "‚ñ´Ô∏è `/get_div <—Ç–∞–π–º—Ñ—Ä–µ–π–º> <—Ç–∏–ø>` ‚Äî –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã —Å –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–µ–π\n"
    message_text += "–ü—Ä–∏–º–µ—Ä: `/get_div 12h long`\n\n"
    
    message_text += "üîÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ:\n"
    message_text += "‚ñ´Ô∏è `/get_last_set <—Ç–∞–π–º—Ñ—Ä–µ–π–º> <—Ç–∏–ø>` ‚Äî –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–æ–∫–µ–Ω—ã —Å —Ä–∞—Å—Ç—è–∂–∫–æ–π\n"
    message_text += "–ü—Ä–∏–º–µ—Ä: `/get_last_set 1d short`\n\n"
    
    message_text += "‚ñ´Ô∏è `/get_last_piv <—Ç–∞–π–º—Ñ—Ä–µ–π–º> <—Ç–∏–ø>` ‚Äî –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–æ–∫–µ–Ω—ã —Å –ø–∏–≤–æ—Ç–æ–º\n"
    message_text += "–ü—Ä–∏–º–µ—Ä: `/get_last_piv 8h long`\n\n"
    
    message_text += "‚ñ´Ô∏è `/get_last_div <—Ç–∞–π–º—Ñ—Ä–µ–π–º> <—Ç–∏–ø>` ‚Äî –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–æ–∫–µ–Ω—ã —Å –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–µ–π\n"
    message_text += "–ü—Ä–∏–º–µ—Ä: `/get_last_div 4h short`\n\n"

    message_text += "üîç –ü–æ–∏—Å–∫ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ —Ö—ç—à—Ç–µ–≥—É:\n"
    message_text += "‚ñ´Ô∏è –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω —Å #, –Ω–∞–ø—Ä–∏–º–µ—Ä: `#BTC`, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã.\n\n"
    
    message_text += "üßë‚Äçüî¨ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è:\n"
    message_text += "‚ñ´Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/filter` –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —É—Å–ª–æ–≤–∏—è–º.\n"
    message_text += "‚ñ´Ô∏è –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ `/filter help`.\n\n"

    if is_admin:
        message_text += "üîê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º):\n"
        message_text += "`/grant_admin <user_id>` - –í—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
        message_text += "`/revoke_admin <user_id>` - –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        message_text += "`/get_username <user_id>` - –ü–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\n"
        message_text += "`/get_all_users` - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        message_text += "`/grant_subscription <user_id> <days>` - –í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ N –¥–Ω–µ–π\n"
        message_text += "`/revoke_subscription <user_id>` - –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        message_text += "`/get_subscribed_users` - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –∏ —Å—Ä–æ–∫–æ–º –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è\n"
        
        message_text += "\n–û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è:\n"
        message_text += "üß® - –ü–æ—Å–ª–µ–¥–Ω—è—è —Ä–∞—Å—Ç—è–∂–∫–∞ (Last stretch)\n"
        message_text += "üü© - –î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è –¥–ª—è –ª–æ–Ω–≥-–ø–æ–∑–∏—Ü–∏–π (Divergence Long)\n"
        message_text += "üü• - –î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è –¥–ª—è —à–æ—Ä—Ç-–ø–æ–∑–∏—Ü–∏–π (Divergence Short)\n"
        message_text += "üî∂ - –ü–∏–≤–æ—Ç –¥–ª—è –ª–æ–Ω–≥/—à–æ—Ä—Ç –ø–æ–∑–∏—Ü–∏–π (Pivot Long/Short)\n"
        message_text += "‚ö™Ô∏è - –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (Empty)\n"

    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data=Navigation(data='back', previous='main_menu_keyboard').pack()))
    keyboard = builder.as_markup()

    return message_text, keyboard

def filter_help_menu():
    message_text = "üîπ –ö–æ–º–∞–Ω–¥–∞ `/filter` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π.\n\n"
    message_text += "üìä –§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã:\n"
    message_text += "‚ñ´Ô∏è `/filter <–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ>`\n"
    message_text += "`<—Ç–∞–π–º—Ñ—Ä–µ–π–º>`: `<—É—Å–ª–æ–≤–∏—è>` and `<—É—Å–ª–æ–≤–∏—è>` or `<—É—Å–ª–æ–≤–∏—è>`\n"
    message_text += "–ì–¥–µ:\n"
    message_text += "‚ñ´Ô∏è `<–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ>` ‚Äî —ç—Ç–æ —Ç–∏–ø —Å–¥–µ–ª–∫–∏ (`Long` –∏–ª–∏ `Short`).\n"
    message_text += "‚ñ´Ô∏è `<—Ç–∞–π–º—Ñ—Ä–µ–π–º>` ‚Äî —ç—Ç–æ –ø–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: `1d`, `12h`, `8h`, `4h`, `2h`, `1h`).\n"
    message_text += "‚ñ´Ô∏è `<—É—Å–ª–æ–≤–∏—è>` ‚Äî —ç—Ç–æ —Ñ–∏–ª—å—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫ –¥–∞–Ω–Ω—ã–º. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π —á–µ—Ä–µ–∑ `and` –∏/–∏–ª–∏ `or`.\n\n"
    
    message_text += "üìä –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–µ—Ç—Ä–∏–∫–∏:\n"
    message_text += "‚ñ´Ô∏è `cs_stretch` ‚Äî –°–≤–µ—á–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Ç—è–∂–∫–∏ (üß®).\n"
    message_text += "‚ñ´Ô∏è `cs_div` ‚Äî –°–≤–µ—á–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏ (üü© –¥–ª—è Long –∏ üü• –¥–ª—è Short).\n"
    message_text += "‚ñ´Ô∏è `cs_pivot` ‚Äî –°–≤–µ—á–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–∏–≤–æ—Ç–∞ (üî∂).\n\n"
    
    message_text += "üìä –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã:\n"
    message_text += "‚ñ´Ô∏è `=` ‚Äî —Ä–∞–≤–Ω–æ.\n"
    message_text += "‚ñ´Ô∏è `<=` ‚Äî –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ.\n"
    message_text += "‚ñ´Ô∏è `>=` ‚Äî –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ.\n"
    message_text += "‚ñ´Ô∏è `<` ‚Äî –º–µ–Ω—å—à–µ.\n"
    message_text += "‚ñ´Ô∏è `>` ‚Äî –±–æ–ª—å—à–µ.\n\n"
    
    message_text += "üìä –û–ø–µ—Ä–∞—Ç–æ—Ä—ã `and` –∏ `or`:\n"
    message_text += "‚ñ´Ô∏è `and` ‚Äî –æ–±–∞ —É—Å–ª–æ–≤–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.\n"
    message_text += "‚ñ´Ô∏è `or` ‚Äî –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.\n"
    message_text += "–í—ã –º–æ–∂–µ—Ç–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π —á–µ—Ä–µ–∑ `and` –∏/–∏–ª–∏ `or` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.\n\n"
    
    message_text += "üìä –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
    
    message_text += "‚ñ´Ô∏è `/filter Long\n1d: cs_stretch <= 50 and cs_div >= 10`\n"
    message_text += "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–ª–∏–Ω–Ω—ã–º –ø–æ–∑–∏—Ü–∏—è–º –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ 1d, –≥–¥–µ:\n"
    message_text += "  - –°–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Ç—è–∂–∫–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ‚â§ 50.\n"
    message_text += "  - –°–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ‚â• 10.\n\n"
    
    message_text += "‚ñ´Ô∏è `/filter Short\n4h: cs_pivot > 20`\n"
    message_text += "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ—Ä–æ—Ç–∫–∏–º –ø–æ–∑–∏—Ü–∏—è–º –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ 4h, –≥–¥–µ:\n"
    message_text += "  - –°–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–∏–≤–æ—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å > 20.\n\n"
    
    message_text += "‚ñ´Ô∏è `/filter Long\n1d: cs_stretch <= 50 or cs_div >= 10`\n"
    message_text += "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–ª–∏–Ω–Ω—ã–º –ø–æ–∑–∏—Ü–∏—è–º –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ 1d, –≥–¥–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π:\n"
    message_text += "  - –°–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Ç—è–∂–∫–∏ ‚â§ 50.\n"
    message_text += "  - –ò–ª–∏ —Å–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏ ‚â• 10.\n\n"
    
    message_text += "‚ñ´Ô∏è `/filter Long\n1d: cs_stretch <= 50 and cs_div >= 10\n4h: cs_pivot > 15 and cs_stretch <= 30`\n"
    message_text += "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–ª–∏–Ω–Ω—ã–º –ø–æ–∑–∏—Ü–∏—è–º –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞—Ö 1d –∏ 4h, –≥–¥–µ:\n"
    message_text += "  - –ù–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ 1d: —Å–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Ç—è–∂–∫–∏ ‚â§ 50 –∏ —Å–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏ ‚â• 10.\n"
    message_text += "  - –ù–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ 4h: —Å–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–∏–≤–æ—Ç–∞ > 15 –∏ —Å–≤–µ—á–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Ç—è–∂–∫–∏ ‚â§ 30.\n\n"
    
    message_text += "üìä –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n"
    message_text += "‚ñ´Ô∏è –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, –±–æ—Ç –≤–µ—Ä–Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
    message_text += "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n\n"

    return message_text

def token_selection_keyboard(item_key):
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="ü•¨", callback_data=BaseCallbackData(data=f'add_long_list_{item_key}').pack()),
        InlineKeyboardButton(text="üçÅ", callback_data=BaseCallbackData(data=f'add_short_list_{item_key}').pack()),
        InlineKeyboardButton(text="üîÑ", callback_data=BaseCallbackData(data=f'refresh_single_token_{item_key}').pack()),
        InlineKeyboardButton(text="‚ùå", callback_data=BaseCallbackData(data=f'close').pack())
    )
    return builder.as_markup()